REATE TABLE standings (
team_id INT AUTO_INCREMENT PRIMARY KEY,
    team VARCHAR(100) NOT NULL,
    wins INT,
    losses INT,
    points INT,
    rank_position INT,
    city VARCHAR(100)
);

-- Show all the tables in the current database
SHOW TABLES;

DROP TABLE IF EXISTS standings;

-- Creating a new table

CREATE TABLE standings 
    (season VARCHAR(20),
    tier INT,
    division VARCHAR(100),
    position INT,
    team_id VARCHAR(20),
    team_name VARCHAR(100),
    played INT,
    wins INT,
    draws INT,
    losses INT,
    goals_for INT,
    goals_against INT,
    goal_difference INT,
    points INT,
    point_adjustment INT,
    season_outcome VARCHAR(50)
);

-- Inserting new rows
INSERT INTO standings 
(season, tier, division, position, team_id, team_name, played, wins, draws, losses, goals_for, goals_against, goal_difference, points, point_adjustment, season_outcome)
VALUES
('2011-2011', 1, 'FA Women''s Super League (WSL)', 1, 'T-001-T', 'Arsenal Ladies', 14, 10, 2, 2, 29, 9, 20, 32, 0, 'No change'),
('2011-2011', 1, 'FA Women''s Super League (WSL)', 2, 'T-003-T', 'Birmingham City Ladies', 14, 8, 5, 1, 29, 13, 16, 29, 0, 'No change'),
('2011-2011', 1, 'FA Women''s Super League (WSL)', 3, 'T-013-T', 'Everton Ladies', 14, 7, 4, 3, 19, 13, 6, 25, 0, 'No change'),
('2011-2011', 1, 'FA Women''s Super League (WSL)', 4, 'T-016-T', 'Lincoln Ladies', 14, 6, 3, 5, 18, 16, 2, 21, 0, 'No change'),
('2011-2011', 1, 'FA Women''s Super League (WSL)', 5, 'T-006-T', 'Bristol Academy', 14, 4, 4, 6, 14, 20, -6, 16, 0, 'No change');

-- Confirm insertion
SELECT * FROM standings;

-- Show unique Standings
SELECT DISTINCT team_name
FROM standings;

-- Retrieve the top 5 teams with the highest points
SELECT team_name, points
FROM standings
ORDER BY points DESC;


-- Show all teams from a specific division
SELECT team_name, division
FROM standings
WHERE division = 'FA Women''s Super League (WSL)';

-- Display teams with more than 10 wins and fewer than 5 losses
SELECT team_name, wins, losses
FROM standings
WHERE wins > 10 AND losses < 5;

-- Order teams alphabetically by team name
SELECT team_name
FROM standings
ORDER BY team_name ASC;


-- Count how many teams are in the table
SELECT COUNT(*) AS total_teams
FROM standings;


-- Show the average points scored by all teams
SELECT AVG(points) AS average_points
FROM standings;


-- Show total wins and total losses of all teams
SELECT SUM(wins) AS total_wins, SUM(losses) AS total_losses
FROM standings;


-- Group teams by division and show average points per division
SELECT division, AVG(points) AS avg_points
FROM standings
GROUP BY division;


-- Use HAVING to show only divisions where average points are above 20
SELECT division, AVG(points) AS avg_points
FROM standings
GROUP BY division
HAVING AVG(points) > 20;

-- Add a new column for coach names
ALTER TABLE standings
ADD COLUMN assistant_coach_name VARCHAR(100);

-- Remove coach name column
ALTER TABLE standings
DROP COLUMN coach_name;

-- Create another table named team info
CREATE TABLE team_info (
    team_name VARCHAR(100),
    stadium VARCHAR(100),
    city VARCHAR(100)
);

-- Insert matching records into team_info
INSERT INTO team_info (team_name, stadium, city)
VALUES
('Arsenal Ladies', 'Meadow Park', 'London'),
('Birmingham City Ladies', 'Damson Park', 'Birmingham'),
('Everton Ladies', 'Walton Hall Park', 'Liverpool'),
('Lincoln Ladies', 'Sincil Bank', 'Lincoln'),
('Bristol Academy', 'Ashton Gate', 'Bristol');

-- Use INNER JOIN to combine standings and team_info
SELECT s.team_name, s.points, t.city, t.stadium
FROM standings s
INNER JOIN team_info t
ON s.team_name = t.team_name;


-- Use LEFT JOIN to show all teams in standings
SELECT s.team_name, t.city
FROM standings s
LEFT JOIN team_info t
ON s.team_name = t.team_name;

-- Use RIGHT JOIN to show all teams in team_info
SELECT s.team_name, t.city
FROM standings s
RIGHT JOIN team_info t
ON s.team_name = t.team_name;

-- Show the top 3 teams with highest wins
SELECT team_name, wins
FROM standings
ORDER BY wins DESC
LIMIT 3;

-- Show all teams whose names start with ‘A’
SELECT team_name
FROM standings
WHERE team_name LIKE 'A%';

-- Find all teams that have exactly 0 losses
SELECT team_name, losses
FROM standings
WHERE losses = 0;

-- Display total points per city, ordered by points descending
CREATE VIEW top_teams AS
SELECT team_name, points
FROM standings
WHERE points > 30;
